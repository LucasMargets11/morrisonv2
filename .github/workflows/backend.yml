name: Deploy Backend to ECS

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - 'requirements.txt'

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
      ECS_CLUSTER: ${{ secrets.ECS_CLUSTER }}
      ECS_SERVICE: ${{ secrets.ECS_SERVICE }}
      CONTAINER_NAME: web

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -f backend/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Update ECS service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: |
            {
              "family": "${{ env.ECS_SERVICE }}",
              "networkMode": "awsvpc",
              "requiresCompatibilities": ["FARGATE"],
              "cpu": "256",
              "memory": "512",
              "containerDefinitions": [
                {
                  "name": "${{ env.CONTAINER_NAME }}",
                  "image": "${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}",
                  "portMappings": [{"containerPort": 8000, "protocol": "tcp"}],
                  "essential": true,
                  "environment": [
                    {"name":"DJANGO_SETTINGS_MODULE","value":"config.settings_prod"}
                  ],
                  "logConfiguration": {"logDriver":"awslogs","options":{"awslogs-group":"/ecs/${{ env.ECS_SERVICE }}","awslogs-region":"${{ env.AWS_REGION }}","awslogs-stream-prefix":"ecs"}}
                }
              ]
            }
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
